#include<bits/stdc++.h>
using namespace std;
vector<vector<pair<long long int , long long int>>> adj;
vector<bool> visited;

long long int prims(long long int node) {
    priority_queue<pair<long long int , long long int> , vector<pair<long long int , long long int>> , greater<pair<long long int , long long int>>> pq;
    pq.push({0 , node});
    long long int ans = 0;
    while(!pq.empty()) {
        pair<long long int , long long int> x = pq.top();
        pq.pop();
        if(visited[x.second]) {
            continue;
        }
        visited[x.second] = true;
        ans += x.first;
        for(long long int i = 0 ; i < adj[x.second].size() ; i++) {
            if(!visited[adj[x.second][i].first]) {
                pq.push({adj[x.second][i].second , adj[x.second][i].first});
            }
        }
    }
    return ans;
}

int main() {
    long long int n , m , i , x , y , cost;
    cin >> n >> m;
    adj = vector<vector<pair<long long int , long long int>>> (n+1);
    visited = vector<bool> (n+1);
    for(i = 0 ; i < m ; i++) {
        cin >> x >> y >> cost;
        adj[x].push_back({y , cost});
        adj[y].push_back({x , cost});
    }
    cout << prims(1) << "\n";
}
